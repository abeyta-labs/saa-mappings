name: Generate Mapping Workflow

on:
  workflow_dispatch:
    inputs:
      slug:
        description: 'Slug identifier for the mapping'
        required: true
        type: string
      repo_url:
        description: 'Repo repository URL (e.g., https://github.com/org/repo)'
        required: true
        type: string
      coordinates:
        description: 'Coordinates for the mapping (optional, e.g. com.example.module:my-spring-library)'
        required: false
        type: string
      java_version:
        description: 'Java version to use (optional, defaults to 17)'
        required: false
        type: string
      cron_schedule:
        description: 'Cron schedule for the workflow (optional, defaults to "0 9 1,15 * *")'
        required: false
        type: string
        default: '0 9 1,15 * *'

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  generate-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PULL_REQUEST_TOKEN }}
          ref: main
      - name: Generate workflow file
        run: |
          # Create the workflows directory if it doesn't exist
          mkdir -p .github/workflows
          
          # Use provided cron schedule or default
          CRON_SCHEDULE="${{ inputs.cron_schedule }}"
          if [ -z "$CRON_SCHEDULE" ]; then
            CRON_SCHEDULE="0 9 1,15 * *"
          fi
          
          # Start generating the workflow file
          cat > .github/workflows/${{ inputs.slug }}-mapping.yml << EOF
          name: ${{ inputs.slug }}-mapping
          
          on:
            # Manual trigger (on-demand)
            workflow_dispatch:
            schedule:
              # Runs based on the configured schedule
              - cron: '$CRON_SCHEDULE'
          
          permissions:
            contents: write
            pull-requests: write
          
          jobs:
            call-mapping-workflow:
              uses: abeyta-labs/saa-workflows/.github/workflows/build-mapping.yml@main
              with:
                mapping-name: ${{ inputs.slug }}
                repo-url: ${{ inputs.repo_url }}
          EOF
          
          # Conditionally add coordinates if provided
          if [ -n "${{ inputs.coordinates }}" ]; then
            echo "      coordinates: ${{ inputs.coordinates }}" >> .github/workflows/${{ inputs.slug }}-mapping.yml
          fi
          
          # Conditionally add java_version if provided
          if [ -n "${{ inputs.java_version }}" ]; then
            echo "      java-version: ${{ inputs.java_version }}" >> .github/workflows/${{ inputs.slug }}-mapping.yml
          fi
          
          # Add the secrets inherit line
          echo "    secrets: inherit" >> .github/workflows/${{ inputs.slug }}-mapping.yml
          
          echo "Generated workflow file: .github/workflows/${{ inputs.slug }}-mapping.yml"
          echo "---"
          echo "Content of generated file:"
          cat .github/workflows/${{ inputs.slug }}-mapping.yml

      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet .github/workflows/${{ inputs.slug }}-mapping.yml; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected in the workflow file"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in the workflow file"
          fi

      - name: Commit and push changes
        if: steps.check_changes.outputs.changes == 'true' || !hashFiles('.github/workflows/${{ inputs.slug }}-mapping.yml')
        run: |
          git add .github/workflows/${{ inputs.slug }}-mapping.yml
          
          # Build commit message
          COMMIT_MSG="Generate/Update ${{ inputs.slug }}-mapping.yml workflow
          
          Parameters:
          - Slug: ${{ inputs.slug }}
          - Repo URL: ${{ inputs.repo_url }}"
          
          if [ -n "${{ inputs.coordinates }}" ]; then
            COMMIT_MSG="$COMMIT_MSG
          - Coordinates: ${{ inputs.coordinates }}"
          fi
          
          if [ -n "${{ inputs.java_version }}" ]; then
            COMMIT_MSG="$COMMIT_MSG
          - Java Version: ${{ inputs.java_version }}"
          fi
          
          if [ -n "${{ inputs.cron_schedule }}" ]; then
            COMMIT_MSG="$COMMIT_MSG
          - Cron Schedule: ${{ inputs.cron_schedule }}"
          fi
          
          # Check if there are changes to commit
          if ! git diff --cached --quiet; then
            git commit -m "$COMMIT_MSG"
            git push origin main
            echo "✅ Successfully committed and pushed the workflow file"
          else
            echo "ℹ️ No changes to commit - workflow file already up to date"
          fi

      - name: Summary
        run: |
          echo "## Workflow Generation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Generated Workflow" >> $GITHUB_STEP_SUMMARY
          echo "- **File**: \`.github/workflows/${{ inputs.slug }}-mapping.yml\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Mapping Name**: ${{ inputs.slug }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Repo URL**: ${{ inputs.repo_url }}" >> $GITHUB_STEP_SUMMARY
          
          if [ -n "${{ inputs.coordinates }}" ]; then
            echo "- **Coordinates**: ${{ inputs.coordinates }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Coordinates**: *(not provided)*" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -n "${{ inputs.java_version }}" ]; then
            echo "- **Java Version**: ${{ inputs.java_version }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Java Version**: *(not provided)*" >> $GITHUB_STEP_SUMMARY
          fi
          
          CRON_SCHEDULE="${{ inputs.cron_schedule }}"
          if [ -z "$CRON_SCHEDULE" ]; then
            CRON_SCHEDULE="0 9 1,15 * *"
          fi
          echo "- **Cron Schedule**: \`$CRON_SCHEDULE\`" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Schedule" >> $GITHUB_STEP_SUMMARY
          echo "The generated workflow will run:" >> $GITHUB_STEP_SUMMARY
          echo "- On manual trigger (workflow_dispatch)" >> $GITHUB_STEP_SUMMARY
          echo "- On schedule: \`$CRON_SCHEDULE\`" >> $GITHUB_STEP_SUMMARY
          
          # Parse and explain the cron schedule
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "$CRON_SCHEDULE" = "0 9 1,15 * *" ]; then
            echo "*Schedule: At 9:00 AM UTC on the 1st and 15th of every month*" >> $GITHUB_STEP_SUMMARY
          else
            echo "*Custom schedule configured*" >> $GITHUB_STEP_SUMMARY
          fi